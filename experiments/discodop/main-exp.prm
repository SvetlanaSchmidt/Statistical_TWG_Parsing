top='ROOT',
stages=[
        dict(
                name='pcfg', mode='pcfg',
                split=True, markorigin=True,
                beam_beta=1e-4,
        ),
        dict(
                name='plcfrs', mode='plcfrs',
                prune=True, splitprune=True, k=10000,
        ),
        dict(
                name='dop', mode='plcfrs',
                prune=True, k=5000,
                dop='doubledop', m=10000,
                estimator='rfe', objective='mpp',
        ),
],

corpusfmt='export',
traincorpus=dict(
    path='../TWG/export/train.export', encoding='utf-8',
    numsents=5000, maxwords=1000),
testcorpus=dict(
    path='../TWG/export/dev.export', encoding='utf-8',
    numsents=5000, maxwords=1000,
    skiptrain=False,  # when the train & test set are read from the same file,
		# enable this to skip the training sentences to get to the test set.
    ),
evalparam='../eval.prm',  # EVALB-style parameter file
# functions=None,
# morphology=None,
# punct='move',  # re-attach punctuation?
# transformations=('fraser2013tiger', ),

postagging=dict(
        method='unknownword',
        model='4',
        # options for unknown word models:
        unknownthreshold=4,  # use probs of rare words for unknown words
        openclassthreshold=50,  # add unseen tags for known words. 0 to disable.
        simplelexsmooth=True,  # disable sophisticated smoothing
),

binarization=dict(
        method='default',
        factor='right',
        h=1, v=1,
#         headrules='../negra.headrules',
#         markhead=False,
#         labelfun=lambda n: n.label.split('^')[0]
),

verbosity=2,
numproc=4,  # increase to use multiple CPUs. Set to None to use all CPUs.
